syntax = "proto3";
package comdex.rewards.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "comdex/rewards/v1beta1/params.proto";
import "comdex/rewards/v1beta1/rewards.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/comdex-official/comdex/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  rpc QueryRewards(QueryRewardsRequest) returns (QueryRewardsResponse) {
    option (google.api.http).get = "/comdex/rewards/v1beta1/rewards";
  }
  rpc QueryReward(QueryRewardRequest) returns (QueryRewardResponse) {
    option (google.api.http).get = "/comdex/rewards/v1beta1/reward/{id}";
  }
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/comdex/rewards/v1beta1/params";
  }
  // this line is used by starport scaffolding # 2
}

message QueryRewardsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryRewardsResponse {
  repeated Internal_rewards rewards = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"rewards\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryRewardRequest {
  uint64 id = 1;
}

message QueryRewardResponse {
  Internal_rewards reward = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"reward\"" ];
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
