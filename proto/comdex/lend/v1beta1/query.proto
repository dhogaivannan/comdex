syntax = "proto3";
package comdex.lend.v1beta1;


import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "comdex/lend/v1beta1/lend.proto";
import "comdex/lend/v1beta1/params.proto";

option go_package = "github.com/comdex-official/comdex/x/lend/types";
option (gogoproto.equal_all)           = false;
option (gogoproto.goproto_getters_all) = false;

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryLendsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryLendsResponse {
  repeated LendAsset lends = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"lends\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryLendRequest {
  uint64 id = 1;
}

message QueryLendResponse {
  LendAsset lend = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"lend\"" ];
}

service Query {
  rpc QueryLends(QueryLendsRequest) returns (QueryLendsResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/lends";
  }
  rpc QueryLend(QueryLendRequest) returns (QueryLendResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/lends/{id}";
  }
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/comdexofficial/comdex/lend/params";
  }
}

