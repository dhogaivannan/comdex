syntax = "proto3";
package comdex.lend.v1beta1;


import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "comdex/lend/v1beta1/lend.proto";
import "comdex/lend/v1beta1/params.proto";

option go_package = "github.com/comdex-official/comdex/x/lend/types";
option (gogoproto.equal_all)           = false;
option (gogoproto.goproto_getters_all) = false;

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryLendsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryLendsResponse {
  repeated LendAsset lends = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"lends\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryLendRequest {
  uint64 id = 1;
}

message QueryLendResponse {
  LendAsset lend = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"lend\"" ];
}

message QueryAllLendByOwnerRequest {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  cosmos.base.query.v1beta1.PageRequest pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryAllLendByOwnerResponse {
  repeated uint64 lendIds = 1 [
    (gogoproto.moretags) = "yaml:\"lend_ids\"" ];
}

message QueryPairsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryPairsResponse {
  repeated Extended_Pair extendedPairs = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"extended_pairs\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryPairRequest {
  uint64 id = 1;
}

message QueryPairResponse {
  Extended_Pair ExtendedPair = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"extended_pair\"" ];
}

message QueryPoolsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryPoolsResponse {
  repeated Pool pools = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"pools\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryPoolRequest {
  uint64 id = 1;
}

message QueryPoolResponse {
  Pool Pool = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"pool\"" ];
}

message QueryAssetToPairMappingsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryAssetToPairMappingsResponse {
  repeated AssetToPairMapping assetToPairMappings = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"asset_to_pair_mappings\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2
  [ (gogoproto.moretags) = "yaml:\"pagination\"" ];
}

message QueryAssetToPairMappingRequest {
  uint64 id = 1;
}

message QueryAssetToPairMappingResponse {
  AssetToPairMapping AssetToPairMapping = 1
  [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"asset_to_pair_mapping\"" ];
}

service Query {
  rpc QueryLends(QueryLendsRequest) returns (QueryLendsResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/lends";
  }
  rpc QueryLend(QueryLendRequest) returns (QueryLendResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/lends/{id}";
  }

  rpc QueryAllLendByOwner(QueryAllLendByOwnerRequest) returns (QueryAllLendByOwnerResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/lends-by-owner/{owner}";
  };

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/comdexofficial/comdex/lend/params";
  }

  rpc QueryPairs(QueryPairsRequest) returns (QueryPairsResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/pairs";
  }
  rpc QueryPair(QueryPairRequest) returns (QueryPairResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/pairs/{id}";
  }

  rpc QueryPools(QueryPoolsRequest) returns (QueryPoolsResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/pools";
  }
  rpc QueryPool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/pools/{id}";
  }

  rpc QueryAssetToPairMappings(QueryAssetToPairMappingsRequest) returns (QueryAssetToPairMappingsResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/asset_to_pair_mappings";
  }
  rpc QueryAssetToPairMapping(QueryAssetToPairMappingRequest) returns (QueryAssetToPairMappingResponse) {
    option (google.api.http).get = "/comdex/lend/v1beta1/asset_to_pair_mappings/{id}";
  }
}

